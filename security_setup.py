#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üîí –ë–ï–ó–ü–ï–ß–ù–ê –ó–ú–Ü–ù–ê –ü–ê–†–û–õ–Ø –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–û–†–ê
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≥–µ–Ω–µ—Ä—É—î –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å —Ç–∞ –æ–Ω–æ–≤–ª—é—î users.json
"""

import json
import secrets
import string
from werkzeug.security import generate_password_hash
from pathlib import Path
import os

def generate_secure_password(length=16):
    """–ì–µ–Ω–µ—Ä—É—î –±–µ–∑–ø–µ—á–Ω–∏–π –ø–∞—Ä–æ–ª—å"""
    characters = string.ascii_letters + string.digits + "!@#$%^&*"
    return ''.join(secrets.choice(characters) for _ in range(length))

def generate_secret_key(length=50):
    """–ì–µ–Ω–µ—Ä—É—î –Ω–æ–≤–∏–π SECRET_KEY"""
    return secrets.token_urlsafe(length)

def update_admin_password():
    """–û–Ω–æ–≤–ª—é—î –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    
    print("üîí –ë–ï–ó–ü–ï–ß–ù–ê –ó–ú–Ü–ù–ê –ü–ê–†–û–õ–Ø –ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–û–†–ê")
    print("=" * 50)
    
    # –®–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    users_file = Path("users.json")
    
    if not users_file.exists():
        print("‚ùå –§–∞–π–ª users.json –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
        return
    
    # –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å
    new_password = generate_secure_password()
    password_hash = generate_password_hash(new_password)
    
    try:
        # –ß–∏—Ç–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
        with open(users_file, 'r', encoding='utf-8') as f:
            users = json.load(f)
        
        # –û–Ω–æ–≤–ª—é—î–º–æ –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if 'admin' in users:
            users['admin']['password_hash'] = password_hash
            users['admin']['role'] = 'admin'
            
            # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Ñ–∞–π–ª
            with open(users_file, 'w', encoding='utf-8') as f:
                json.dump(users, f, indent=2, ensure_ascii=False)
            
            print("‚úÖ –ü–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ successfully –æ–Ω–æ–≤–ª–µ–Ω–∏–π!")
            print(f"üîë –ù–û–í–ò–ô –ü–ê–†–û–õ–¨: {new_password}")
            print(f"üë§ –õ–û–ì–Ü–ù: admin")
            print()
            print("‚ö†Ô∏è  –í–ê–ñ–õ–ò–í–û:")
            print(f"   - –ó–∞–ø–∏—à—ñ—Ç—å –ø–∞—Ä–æ–ª—å: {new_password}")
            print("   - –ù–µ –¥—ñ–ª—ñ—Ç—å—Å—è –Ω–∏–º –∑ —ñ–Ω—à–∏–º–∏")
            print("   - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å –¥–æ–¥–∞—Ç–æ–∫")
            
        else:
            print("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á 'admin' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π!")
            
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø–∞—Ä–æ–ª—è: {e}")

def generate_new_secret_key():
    """–ì–µ–Ω–µ—Ä—É—î –Ω–æ–≤–∏–π SECRET_KEY"""
    
    print("\nüîê –ì–ï–ù–ï–†–ê–¶–Ü–Ø –ù–û–í–û–ì–û SECRET_KEY")
    print("=" * 50)
    
    new_secret_key = generate_secret_key()
    
    print("‚úÖ –ù–æ–≤–∏–π SECRET_KEY –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏–π!")
    print(f"üîë SECRET_KEY: {new_secret_key}")
    print()
    print("üìù –Ü–ù–°–¢–†–£–ö–¶–Ü–Ø:")
    print("1. –°–∫–æ–ø—ñ—é–π—Ç–µ —Ü–µ–π –∫–ª—é—á")
    print("2. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ Railway ‚Üí Variables")
    print("3. –û–Ω–æ–≤—ñ—Ç—å SECRET_KEY")
    print("4. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å –¥–æ–¥–∞—Ç–æ–∫")

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è"""
    
    print("üõ°Ô∏è  –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –ë–ï–ó–ü–ï–ö–ò GANTT DASHBOARD")
    print("=" * 60)
    print()
    print("–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:")
    print("1. –ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("2. –ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –Ω–æ–≤–∏–π SECRET_KEY") 
    print("3. –ó—Ä–æ–±–∏—Ç–∏ –≤—Å–µ —Ä–∞–∑–æ–º")
    print("0. –í–∏—Ö—ñ–¥")
    print()
    
    choice = input("–í–∞—à –≤–∏–±—ñ—Ä (0-3): ").strip()
    
    if choice == "1":
        update_admin_password()
    elif choice == "2":
        generate_new_secret_key()
    elif choice == "3":
        update_admin_password()
        generate_new_secret_key()
    elif choice == "0":
        print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
    else:
        print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä!")

if __name__ == "__main__":
    main()
