#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
üîí –ë–ï–ó–ü–ï–ß–ù–ï –û–ù–û–í–õ–ï–ù–ù–Ø –°–ï–ö–†–ï–¢–Ü–í
–¶–µ–π —Å–∫—Ä–∏–ø—Ç –¥–æ–ø–æ–º–∞–≥–∞—î –±–µ–∑–ø–µ—á–Ω–æ –æ–Ω–æ–≤–∏—Ç–∏ –≤—Å—ñ —Å–µ–∫—Ä–µ—Ç–∏ —É –ø—Ä–æ–µ–∫—Ç—ñ
"""

import secrets
import json
import hashlib
from pathlib import Path
from werkzeug.security import generate_password_hash
import getpass

def generate_secure_key():
    """–ì–µ–Ω–µ—Ä—É—î –±–µ–∑–ø–µ—á–Ω–∏–π SECRET_KEY"""
    return secrets.token_hex(32)

def create_password_hash(password):
    """–°—Ç–≤–æ—Ä—é—î —Ö–µ—à –ø–∞—Ä–æ–ª—è"""
    return generate_password_hash(password)

def main():
    print("üîí –ë–ï–ó–ü–ï–ß–ù–ï –û–ù–û–í–õ–ï–ù–ù–Ø –°–ï–ö–†–ï–¢–Ü–í")
    print("=" * 50)
    
    # 1. –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–≤–∏–π SECRET_KEY
    new_secret_key = generate_secure_key()
    print(f"‚úÖ –ù–æ–≤–∏–π SECRET_KEY –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ")
    print(f"üîë –ö–ª—é—á: {new_secret_key}")
    print()
    
    # 2. –ó–∞–ø–∏—Ç—É—î–º–æ –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print("üîê –ó–º—ñ–Ω—ñ—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
    new_password = getpass.getpass("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ")
    confirm_password = getpass.getpass("–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å: ")
    
    if new_password != confirm_password:
        print("‚ùå –ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å!")
        return
    
    if len(new_password) < 8:
        print("‚ùå –ü–∞—Ä–æ–ª—å –º–∞—î –±—É—Ç–∏ –º—ñ–Ω—ñ–º—É–º 8 —Å–∏–º–≤–æ–ª—ñ–≤!")
        return
    
    # 3. –°—Ç–≤–æ—Ä—é—î–º–æ —Ö–µ—à –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è
    password_hash = create_password_hash(new_password)
    
    # 4. –û–Ω–æ–≤–ª—é—î–º–æ users.json
    users_file = Path("users.json")
    if users_file.exists():
        with open(users_file, 'r', encoding='utf-8') as f:
            users = json.load(f)
        
        users['admin']['password_hash'] = password_hash
        
        with open(users_file, 'w', encoding='utf-8') as f:
            json.dump(users, f, indent=2, ensure_ascii=False)
        
        print("‚úÖ –ü–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–Ω–æ–≤–ª–µ–Ω–æ –≤ users.json")
    
    # 5. –°—Ç–≤–æ—Ä—é—î–º–æ —Ñ–∞–π–ª –∑ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è–º–∏
    instructions = f"""
üîí –û–ù–û–í–õ–ï–ù–ù–Ø –°–ï–ö–†–ï–¢–Ü–í –ó–ê–í–ï–†–®–ï–ù–û!

üìã –©–û –ó–†–û–ë–õ–ï–ù–û:
‚úÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –Ω–æ–≤–∏–π SECRET_KEY
‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞

üö® –ù–ï–ì–ê–ô–ù–û –í–ò–ö–û–ù–ê–ô–¢–ï:

1. –û–ù–û–í–Ü–¢–¨ SECRET_KEY –£ RAILWAY:
   - –ó–∞–π–¥—ñ—Ç—å –Ω–∞ Railway Dashboard
   - –ü–µ—Ä–µ–π–¥—ñ—Ç—å —É Variables
   - –ó–º—ñ–Ω—ñ—Ç—å SECRET_KEY –Ω–∞: {new_secret_key}

2. –ó–ê–í–ê–ù–¢–ê–ñ–¢–ï –û–ù–û–í–õ–ï–ù–ò–ô –ö–û–î –ù–ê GITHUB:
   - git add .
   - git commit -m "Security update: remove exposed secrets"
   - git push origin main

3. –ü–ï–†–ï–ó–ê–ü–£–°–¢–Ü–¢–¨ –î–û–î–ê–¢–û–ö –ù–ê RAILWAY

4. –ü–†–û–¢–ï–°–¢–£–ô–¢–ï –ù–û–í–ò–ô –ü–ê–†–û–õ–¨:
   - Username: admin
   - Password: {new_password}

‚ö†Ô∏è –í–ê–ñ–õ–ò–í–û:
- –°—Ç–∞—Ä–∏–π SECRET_KEY —Ç–µ–ø–µ—Ä —Å–∫–æ–º–ø—Ä–æ–º–µ—Ç–æ–≤–∞–Ω–∏–π
- –í–∏–¥–∞–ª—ñ—Ç—å —Ü–µ–π —Ñ–∞–π–ª –ø—ñ—Å–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ–π
- –ù–µ –¥—ñ–ª—ñ—Ç—å—Å—è —Ü–∏–º–∏ –¥–∞–Ω–∏–º–∏ –∑ —ñ–Ω—à–∏–º–∏
"""
    
    with open("SECURITY_UPDATE_INSTRUCTIONS.txt", "w", encoding='utf-8') as f:
        f.write(instructions)
    
    print("‚úÖ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É SECURITY_UPDATE_INSTRUCTIONS.txt")
    print()
    print("üö® –ö–†–ò–¢–ò–ß–ù–û: –ù–µ–≥–∞–π–Ω–æ –æ–Ω–æ–≤—ñ—Ç—å SECRET_KEY —É Railway!")
    print(f"üîë –ù–æ–≤–∏–π –∫–ª—é—á: {new_secret_key}")

if __name__ == "__main__":
    main()
