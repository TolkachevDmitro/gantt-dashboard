#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏
–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ —Ç–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∏–∫–∞—é—Ç—å –ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö
"""

import requests
import json
import time

# –ë–∞–∑–æ–≤–∞ URL
BASE_URL = "http://127.0.0.1:5000"

def login():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –≤ —Å–∏—Å—Ç–µ–º—ñ"""
    session = requests.Session()
    
    # –û—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Ö–æ–¥—É –¥–ª—è CSRF —Ç–æ–∫–µ–Ω—É
    login_page = session.get(f"{BASE_URL}/login")
    if login_page.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –≤—Ö–æ–¥—É: {login_page.status_code}")
        return None
    
    # –õ–æ–≥—ñ–Ω–∏–º–æ—Å—è
    login_data = {
        'username': 'Dmitro',
        'password': 'Prodigy9195'
    }
    
    response = session.post(f"{BASE_URL}/login", data=login_data)
    if response.status_code == 200 and "admin" in response.text.lower():
        print("‚úÖ –£—Å–ø—ñ—à–Ω–æ —É–≤—ñ–π—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É")
        return session
    else:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—Ö–æ–¥—É: {response.status_code}")
        return None

def test_goods_management():
    """–¢–µ—Å—Ç—É—î–º–æ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏"""
    print("\nüîç –¢–ï–°–¢–£–í–ê–ù–ù–Ø –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –¢–û–í–ê–†–ê–ú–ò")
    print("=" * 50)
    
    # –ê–≤—Ç–æ—Ä–∏–∑—É—î–º–æ—Å—è
    session = login()
    if not session:
        return False
    
    # 1. –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ —Ç–æ–≤–∞—Ä–∏
    print("\n1Ô∏è‚É£ –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤...")
    response = session.get(f"{BASE_URL}/api/goods_management")
    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤: {response.status_code}")
        return False
    
    initial_goods = response.json()
    print(f"‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–æ–≤–∞—Ä—ñ–≤: {len(initial_goods)} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π")
    
    # –ü—ñ–¥—Ä–∞—Ö—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤
    total_initial = sum(len(items) for items in initial_goods.values())
    print(f"   –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤: {total_initial}")
    
    # 2. –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä
    print("\n2Ô∏è‚É£ –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä...")
    new_goods = initial_goods.copy()
    
    # –Ø–∫—â–æ –Ω–µ–º–∞—î –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó "–¢–µ—Å—Ç", —Å—Ç–≤–æ—Ä—é—î–º–æ —ó—ó
    if "–¢–µ—Å—Ç" not in new_goods:
        new_goods["–¢–µ—Å—Ç"] = []
    
    # –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä
    test_item = {
        "name": f"–¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä {int(time.time())}",
        "weight": 1.5,
        "pallet_coef": 2.0
    }
    new_goods["–¢–µ—Å—Ç"].append(test_item)
    
    # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π —Å–ø–∏—Å–æ–∫
    response = session.post(f"{BASE_URL}/api/goods_management", 
                          json=new_goods,
                          headers={'Content-Type': 'application/json'})
    
    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—É: {response.status_code}")
        print(f"–í—ñ–¥–ø–æ–≤—ñ–¥—å: {response.text}")
        return False
    
    print(f"‚úÖ –ù–æ–≤–∏–π —Ç–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ: {test_item['name']}")
    
    # 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ –≤—Å—ñ —Ç–æ–≤–∞—Ä–∏ –∑–±–µ—Ä–µ–≥–ª–∏—Å—è
    print("\n3Ô∏è‚É£ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ —Ç–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∏–∫–ª–∏...")
    response = session.get(f"{BASE_URL}/api/goods_management")
    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤ –ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è: {response.status_code}")
        return False
    
    updated_goods = response.json()
    total_updated = sum(len(items) for items in updated_goods.values())
    
    print(f"   –¢–æ–≤–∞—Ä—ñ–≤ –±—É–ª–æ: {total_initial}")
    print(f"   –¢–æ–≤–∞—Ä—ñ–≤ —Å—Ç–∞–ª–æ: {total_updated}")
    
    if total_updated > total_initial:
        print("‚úÖ –£–°–ü–Ü–•! –¢–æ–≤–∞—Ä–∏ –Ω–µ –∑–Ω–∏–∫–ª–∏, –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ")
        
        # –ü–æ–∫–∞–∂–µ–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤i –¥–µ—Ç–∞–ª—ñ
        print(f"\nüìä –î–µ—Ç–∞–ª—ñ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö:")
        for category, items in updated_goods.items():
            print(f"   {category}: {len(items)} —Ç–æ–≤–∞—Ä—ñ–≤")
            
        return True
    elif total_updated == total_initial:
        print("‚ö†Ô∏è –£–í–ê–ì–ê! –ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—ñ–≤ –Ω–µ –∑–º—ñ–Ω–∏–ª–∞—Å—è. –ú–æ–∂–ª–∏–≤–æ —Ç–æ–≤–∞—Ä –Ω–µ –¥–æ–¥–∞–≤—Å—è")
        return False
    else:
        print("‚ùå –ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê! –¢–æ–≤–∞—Ä–∏ –∑–Ω–∏–∫–ª–∏ –ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è")
        print(f"   –í—Ç—Ä–∞—á–µ–Ω–æ {total_initial - total_updated} —Ç–æ–≤–∞—Ä—ñ–≤")
        return False

def test_warehouses_management():
    """–¢–µ—Å—Ç—É—î–º–æ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–∫–ª–∞–¥–∞–º–∏"""
    print("\nüè™ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –°–ö–õ–ê–î–ê–ú–ò")
    print("=" * 50)
    
    # –ê–≤—Ç–æ—Ä–∏–∑—É—î–º–æ—Å—è
    session = login()
    if not session:
        return False
    
    # 1. –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ —Å–∫–ª–∞–¥–∏
    print("\n1Ô∏è‚É£ –û—Ç—Ä–∏–º—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥—ñ–≤...")
    response = session.get(f"{BASE_URL}/api/warehouses_management")
    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–∫–ª–∞–¥—ñ–≤: {response.status_code}")
        return False
    
    warehouses = response.json()
    print(f"‚úÖ –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∫–ª–∞–¥—ñ–≤: {len(warehouses)}")
    
    # 2. –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π —Å–∫–ª–∞–¥
    print("\n2Ô∏è‚É£ –î–æ–¥–∞—î–º–æ –Ω–æ–≤–∏–π —Ç–µ—Å—Ç–æ–≤–∏–π —Å–∫–ª–∞–¥...")
    test_warehouse = f"–¢–µ—Å—Ç–æ–≤–∏–π —Å–∫–ª–∞–¥ {int(time.time())}"
    updated_warehouses = warehouses + [test_warehouse]
    
    response = session.post(f"{BASE_URL}/api/warehouses_management", 
                          json=updated_warehouses,
                          headers={'Content-Type': 'application/json'})
    
    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å–∫–ª–∞–¥—É: {response.status_code}")
        return False
    
    print(f"‚úÖ –ù–æ–≤–∏–π —Å–∫–ª–∞–¥ –¥–æ–¥–∞–Ω–æ: {test_warehouse}")
    
    # 3. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    response = session.get(f"{BASE_URL}/api/warehouses_management")
    if response.status_code != 200:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–∫–ª–∞–¥—ñ–≤ –ø—ñ—Å–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è: {response.status_code}")
        return False
    
    final_warehouses = response.json()
    print(f"   –°–∫–ª–∞–¥—ñ–≤ –±—É–ª–æ: {len(warehouses)}")
    print(f"   –°–∫–ª–∞–¥—ñ–≤ —Å—Ç–∞–ª–æ: {len(final_warehouses)}")
    
    if len(final_warehouses) > len(warehouses):
        print("‚úÖ –£–°–ü–Ü–•! –°–∫–ª–∞–¥ –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ")
        return True
    else:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–∫–ª–∞–¥—É")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–ê–ü–£–°–ö –¢–ï–°–¢–Ü–í –°–ò–°–¢–ï–ú–ò –£–ü–†–ê–í–õ–Ü–ù–ù–Ø")
    print("=" * 60)
    
    # –¢–µ—Å—Ç—É—î–º–æ —Ç–æ–≤–∞—Ä–∏
    goods_success = test_goods_management()
    
    # –¢–µ—Å—Ç—É—î–º–æ —Å–∫–ª–∞–¥–∏
    warehouses_success = test_warehouses_management()
    
    # –ü—ñ–¥—Å—É–º–æ–∫
    print("\n" + "=" * 60)
    print("üìã –ü–Ü–î–°–£–ú–û–ö –¢–ï–°–¢–£–í–ê–ù–ù–Ø:")
    print(f"   –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏: {'‚úÖ –ü–†–û–ô–î–ï–ù–û' if goods_success else '‚ùå –ü–†–û–í–ê–õ–ï–ù–û'}")
    print(f"   –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Å–∫–ª–∞–¥–∞–º–∏: {'‚úÖ –ü–†–û–ô–î–ï–ù–û' if warehouses_success else '‚ùå –ü–†–û–í–ê–õ–ï–ù–û'}")
    
    if goods_success and warehouses_success:
        print("\nüéâ –í–°–Ü –¢–ï–°–¢–ò –ü–†–û–ô–î–ï–ù–û –£–°–ü–Ü–®–ù–û!")
        print("   –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏ —Ç–∞ —Å–∫–ª–∞–¥–∞–º–∏ –ø—Ä–∞—Ü—é—î –∫–æ—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("\n‚ö†Ô∏è –î–ï–Ø–ö–Ü –¢–ï–°–¢–ò –ü–†–û–í–ê–õ–ò–õ–ò–°–Ø")
        print("   –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–¥–∞—Ç–∫–æ–≤–∞ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
