#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ü—Ä–æ—Å—Ç–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø—É –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏
"""

import requests
from requests.adapters import HTTPAdapter
from urllib3.util.retry import Retry

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Å—ñ—ó –∑ –ø–æ–≤—Ç–æ—Ä–Ω–∏–º–∏ —Å–ø—Ä–æ–±–∞–º–∏
session = requests.Session()
retry_strategy = Retry(
    total=3,
    status_forcelist=[429, 500, 502, 503, 504],
    method_whitelist=["HEAD", "GET", "OPTIONS"]
)
adapter = HTTPAdapter(max_retries=retry_strategy)
session.mount("http://", adapter)

BASE_URL = "http://127.0.0.1:5000"

def test_login_variants():
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –≤—Ö–æ–¥—É"""
    
    # –°–ø–∏—Å–æ–∫ –º–æ–∂–ª–∏–≤–∏—Ö –ø–∞—Ä–æ–ª—ñ–≤
    password_variants = [
        'admin',
        'password', 
        'Dmitro123',
        'Dmitro123!',
        'dmitro',
        '123456',
        'password123',
        'Dmytro123!',
        'admin123'
    ]
    
    usernames = ['Dmitro', 'Serg']
    
    print("üîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –≤—Ö–æ–¥—É –≤ —Å–∏—Å—Ç–µ–º—É...")
    
    for username in usernames:
        print(f"\nüë§ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {username}")
        
        for password in password_variants:
            try:
                # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —Å–µ—Å—ñ—é –¥–ª—è –∫–æ–∂–Ω–æ—ó —Å–ø—Ä–æ–±–∏
                test_session = requests.Session()
                
                # –°–ø–æ—á–∞—Ç–∫—É –æ—Ç—Ä–∏–º—É—î–º–æ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Ö–æ–¥—É
                login_page = test_session.get(f"{BASE_URL}/login", timeout=5)
                
                if login_page.status_code != 200:
                    print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –≤—Ö–æ–¥—É: {login_page.status_code}")
                    continue
                
                # –°–ø—Ä–æ–±—É—î–º–æ —É–≤—ñ–π—Ç–∏
                login_data = {
                    'username': username,
                    'password': password
                }
                
                response = test_session.post(f"{BASE_URL}/login", data=login_data, timeout=5)
                
                # –Ø–∫—â–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è - —Ü–µ –º–æ–∂–µ –±—É—Ç–∏ —É—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥
                if response.status_code == 302:
                    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è—î –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
                    redirect_url = response.headers.get('Location', '')
                    if 'login' not in redirect_url:
                        print(f"‚úÖ –£–°–ü–Ü–•! {username}:{password}")
                        
                        # –¢–µ—Å—Ç—É—î–º–æ –¥–æ—Å—Ç—É–ø –¥–æ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏
                        goods_page = test_session.get(f"{BASE_URL}/goods_management", timeout=5)
                        if goods_page.status_code == 200:
                            print(f"‚úÖ –î–æ—Å—Ç—É–ø –¥–æ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏: –¢–ê–ö")
                            return username, password, test_session
                        else:
                            print(f"‚ùå –î–æ—Å—Ç—É–ø –¥–æ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏: –ù–Ü ({goods_page.status_code})")
                    else:
                        print(f"‚ùå {username}:{password} - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å")
                else:
                    print(f"‚ùå {username}:{password} - –ø–æ–º–∏–ª–∫–∞ {response.status_code}")
                    
            except requests.exceptions.RequestException as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è –¥–ª—è {username}:{password} - {e}")
                
    return None, None, None

def test_goods_functionality(session):
    """–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É —Ç–æ–≤–∞—Ä—ñ–≤"""
    
    print("\nüõçÔ∏è –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—É —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏...")
    
    try:
        # –¢–µ—Å—Ç 1: –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤
        response = session.get(f"{BASE_URL}/api/goods_management", timeout=10)
        print(f"üì¶ –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ç–æ–≤–∞—Ä—ñ–≤: {response.status_code}")
        
        if response.status_code == 200:
            goods = response.json()
            print(f"‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ {len(goods)} –∫–∞—Ç–µ–≥–æ—Ä—ñ–π —Ç–æ–≤–∞—Ä—ñ–≤")
            
            for category, items in goods.items():
                print(f"   - {category}: {len(items)} —Ç–æ–≤–∞—Ä—ñ–≤")
        
        # –¢–µ—Å—Ç 2: –°–ø—Ä–æ–±–∞ –¥–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π —Ç–æ–≤–∞—Ä
        test_good = {
            'category': '–¢–ï–°–¢',
            'name': '–¢–µ—Å—Ç–æ–≤–∏–π —Ç–æ–≤–∞—Ä',
            'weight': 1.0,
            'pallet_coef': 1.5
        }
        
        add_response = session.post(
            f"{BASE_URL}/api/goods_management",
            json=test_good,
            headers={'Content-Type': 'application/json'},
            timeout=10
        )
        
        print(f"‚ûï –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä—É: {add_response.status_code}")
        
        if add_response.status_code == 200:
            result = add_response.json()
            print(f"‚úÖ {result.get('message', '–¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ')}")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {add_response.text}")
            
        # –¢–µ—Å—Ç 3: –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É
        export_response = session.get(f"{BASE_URL}/api/goods_export", timeout=10)
        print(f"üì§ –ï–∫—Å–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä—ñ–≤: {export_response.status_code}")
        
        if export_response.status_code == 200:
            print("‚úÖ –ï–∫—Å–ø–æ—Ä—Ç –ø—Ä–∞—Ü—é—î")
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É: {export_response.status_code}")
            
    except requests.exceptions.RequestException as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—ñ: {e}")

def main():
    print("üß™ –ê–í–¢–û–ú–ê–¢–ò–ß–ù–ï –¢–ï–°–¢–£–í–ê–ù–ù–Ø –§–£–ù–ö–¶–Ü–û–ù–ê–õ–£ –£–ü–†–ê–í–õ–Ü–ù–ù–Ø –¢–û–í–ê–†–ê–ú–ò")
    print("=" * 60)
    
    # –°–ø—Ä–æ–±—É—î–º–æ –∑–Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –æ–±–ª—ñ–∫–æ–≤—ñ –¥–∞–Ω—ñ
    username, password, session = test_login_variants()
    
    if username and password and session:
        print(f"\nüéâ –ó–Ω–∞–π–¥–µ–Ω–æ —Ä–æ–±–æ—á—ñ –æ–±–ª—ñ–∫–æ–≤—ñ –¥–∞–Ω—ñ: {username}:{password}")
        test_goods_functionality(session)
        
        print(f"\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–£–í–ê–ù–ù–Ø:")
        print(f"‚úÖ –í—Ö—ñ–¥: {username}:{password}")
        print(f"‚úÖ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î –Ω–∞: {BASE_URL}")
        print(f"‚úÖ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ç–æ–≤–∞—Ä–∞–º–∏: {BASE_URL}/goods_management")
        print(f"‚úÖ API —Ç–æ–≤–∞—Ä—ñ–≤: {BASE_URL}/api/goods_management")
        
    else:
        print(f"\n‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ –æ–±–ª—ñ–∫–æ–≤—ñ –¥–∞–Ω—ñ")
        print(f"–ú–æ–∂–ª–∏–≤–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ:")
        print(f"1. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —á–∏ –ø—Ä–∞—Ü—é—î —Å–µ—Ä–≤–µ—Ä –Ω–∞ {BASE_URL}")
        print(f"2. –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å—É–ø–µ—Ä –∞–¥–º—ñ–Ω–∞")
        print(f"3. –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏")

if __name__ == "__main__":
    main()
